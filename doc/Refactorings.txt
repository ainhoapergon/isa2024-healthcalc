
Refactorings

1. Enum Gender
    - Name: Wrong type of variable for Gender.
    - Refactoring applied: Modifying the data type for a variable.
    - Type: Attribute refactoring.
    - Changes description:
        > New enum created called "Gender".
        > Change every 'm' char for Gender.MALE and every 'w' char for Gender.FEMALE
        > Adapt all the tests and the rest of the classes.
    - Manual changes:
        > Create enum "Gender".
        > Change "char" for "Gender" in HealthCalc, HealthCalcImpl, HealthHospitalAdapter, HealthCalcDecorator (including European version and American version).
        > Change "char" for "Gender" in GUI (controller and main)
        > New method in HealthHospitalAdapter to change char gender into enum gender.


2. Person Interface
    - Name: Long parameter list
    - Refactoring applied: Removing parameters by creating an object.
    - Type: Class refactoring.
    - Changes description:
        > New interface created called "Person".
        > New class created called "PersonImpl" with methods that return the person's parameters.
        > Adapt all the tests and the rest of the classes.
    - Manual changes:
        > Create interface "Person".
        > Create class "PersonImpl".
        > Change every parameter by a new object PersonImpl in HealthCalc, HealthCalcImpl, HealthHospitalAdapter, HealthCalcDecorator (both European and American version).
        > Change every parameter by a new object in GUI (controller and main).

3. CardiovascularMetrics Interface
    - Name: Large interface
    - Refactoring applied: Interface Segregation
    - Type: Class refactoring.
    - Changes description:
        > New interface created called "CardiovascularMetrics".
        > Adapt all the tests and the rest of the classes.
    - Manual changes:
        > Create interface "CardiovascularMetrics".
        > Change the implementation in HealthCalcImpl using CardiovascularMetrics instead of HealthCalc.
        > Change the initial "idealWeight()" name into "getIdealBodyWeight()".

4. MetabolicMetrics Interface
    - Name: Large interface
    - Refactoring applied: Interface Segregation
    - Type: Class refactoring.
    - Changes description:
        > New interface created called "MetabolicMetrics".
        > Adapt all the tests and the rest of the classes.
    - Manual changes:
        > Create interface "MetabolicMetrics".
        > Change the implementation in HealthCalcImpl using MetabolicMetrics instead of HealthCalc.